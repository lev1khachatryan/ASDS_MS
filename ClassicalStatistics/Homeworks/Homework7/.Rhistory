prob <- 1/(1+ez)
if (prob > cat){
print("default")
} else{
print("Non default")
}
}
myFunc( 45 , 1 , 252.23 , 21 , 24)
zz <- myFunc( 45 , 1 , 252.23 , 21 , 24)
print(zz)
myFunc <- function(age , employ , income , debtinc , creddebt, cat = 0.5){
a <- c(1, age , employ , income , debtinc , creddebt)
ez <- exp(-sum(final_model$coefficients * a ))
prob <- 1/(1+ez)
if (prob > cat){
print("default")
} else{
print("Non default")
}
return(prob)
}
zz <- myFunc( 45 , 1 , 252.23 , 21 , 24)
print(zz)
zz <- myFunc( 45 , 34 , 252.23 , 21 , 24)
print(zz)
zz <- myFunc( 45 , 343 , 252.23 , 21 , 24)
print(zz)
zz <- myFunc( 45 , 3 , 252.23 , 1 , 1)
print(zz)
zz <- myFunc( 45 , 3 , 252.23 , 1342324 , 1)
print(zz)
zz <- myFunc( 45 , 3 , 252.23 , 122 , 12)
print(zz)
head(airquality)
head(airquality)
dim(airquality)
dat <- airquality
head(dat)
head(dat)
dim(dat)
rm(list = ls())
R.version.string
dat <- airquality
dim(dat) # (153 , 6)
## "R version 3.5.1 (2018-07-02)"
rm(list = ls())
dat <- airquality
dim(dat) # (153 , 6)
dat[,"Temp"]
dat[,"Temp"] <= 86 and dat[,"Temp"] >= 68
dat[,"Temp"] <= 86
dat[,"Temp"] <= 86 & dat[,"Temp"] >= 68
dat[,"Temp"] <= 86 & dat[,"Temp"] >= 68
dat[dat[,"Temp"] <= 86 & dat[,"Temp"] >= 68, ]
dat["Category"] <- "None"
names(dat)
dat$Category
dat[dat[,"Temp"] <= 86 & dat[,"Temp"] >= 68,"Category" ]
dat[dat[,"Temp"] <= 86 & dat[,"Temp"] >= 68,"Category" ] <- "Normal"
dat
dat[dat[,"Temp"] <= 86 & dat[,"Temp"] >= 68,"Category" ] <- "Normal"
dat[dat[,"Temp"] < 68,"Category" ] <- "Cold"
dat[dat[,"Temp"] > 86,"Category" ] <- "Hot"
dat
view(dat)
View(dat)
## "R version 3.5.1 (2018-07-02)"
rm(list = ls())
dat <- airquality
# dat["Category"] <- "None"
dat[dat[,"Temp"] <= 86 & dat[,"Temp"] >= 68,"Category" ] <- "Normal"
dat[dat[,"Temp"] < 68,"Category" ] <- "Cold"
dat[dat[,"Temp"] > 86,"Category" ] <- "Hot"
View(dat)
## "R version 3.5.1 (2018-07-02)"
rm(list = ls())
dat <- airquality
dat[dat[,"Temp"] <= 86 & dat[,"Temp"] >= 68,"Category" ] <- "Normal"
dat[dat[,"Temp"] < 68,"Category" ] <- "Cold"
dat[dat[,"Temp"] > 86,"Category" ] <- "Hot"
View(dat)
dat[,"Category" == "Normal"]
dat["Category" == "Normal",]
dat["Category"]
dat["Category"] == "Normal"
dat[dat["Category"] == "Normal"]
View(dat[dat["Category"] == "Normal"])
dat[dat["Category"] == "Normal"]
dat["Category"] == "Normal"
dat["Category"] == "Normal"
dat["Category" == "Normal"]
dat["Category" == "Normal",]
dat[,"Category"]
dat[,"Category"]
dat[,"Category" == "Cold"]
dat[dat$Category == "Cold",]
dat[dat$Category == "Normal",]
dim(dat[dat$Category == "Normal",])
c(dat[dat$Category == "Cold",],dat[dat$Category == "Normal",],dat[dat$Category == "Hot",])
x <- c(dat[dat$Category == "Cold",],dat[dat$Category == "Normal",],dat[dat$Category == "Hot",])
dim(x)
x
dat[dat$Category == "Cold","Ozone"]
mean(dat[dat$Category == "Cold","Ozone"])
min(dat[dat$Category == "Cold","Ozone"])
max(dat[dat$Category == "Cold","Ozone"])
max(dat[dat$Category == "Cold","Ozone"], na.rm = TRUE)
min(dat[dat$Category == "Cold","Ozone"], na.rm = TRUE)
x <- c(dat[dat$Category == "Cold","Ozone"],dat[dat$Category == "Normal","Ozone"],dat[dat$Category == "Hot","Ozone"])
x
lapply(x, function(c){(min(c, na.rm = TRUE) + max(c, na.rm = TRUE))/2})
c(dat[dat$Category == "Cold","Ozone"],dat[dat$Category == "Normal","Ozone"],dat[dat$Category == "Hot","Ozone"])
x <- list(dat[dat$Category == "Cold","Ozone"],"asda",dat[dat$Category == "Normal","Ozone"],"asdd",dat[dat$Category == "Hot","Ozone"])
x
x <- list(dat[dat$Category == "Cold","Ozone"],dat[dat$Category == "Normal","Ozone"],dat[dat$Category == "Hot","Ozone"])
lapply(x, function(c){(min(c, na.rm = TRUE) + max(c, na.rm = TRUE))/2})
min(dat[dat$Category == "Cold","Ozone"], na.rm = TRUE)
(min(dat[dat$Category == "Cold","Ozone"], na.rm = TRUE) + max(dat[dat$Category == "Cold","Ozone"], na.rm = TRUE))/2
(min(dat[dat$Category == "Normal","Ozone"], na.rm = TRUE) + max(dat[dat$Category == "Normal","Ozone"], na.rm = TRUE))/2
dat[dat$Category == "Normal","Ozone"], na.rm = TRUE)
min(dat[dat$Category == "Normal","Ozone"], na.rm = TRUE)
min(dat[dat$Category == "Normal","Ozone"], na.rm = TRUE)
max(dat[dat$Category == "Normal","Ozone"], na.rm = TRUE)
x <- list(dat[dat$Category == "Cold","Ozone"],dat[dat$Category == "Normal","Ozone"],dat[dat$Category == "Hot","Ozone"])
lapply(x, function(c){(min(c, na.rm = TRUE) + max(c, na.rm = TRUE))/2})
x <- c(1,2,654,-8,5)
n <- length(x)
sort(x,partial=n-1)[n-1]
x <- c(1,2,654,-8,5)
n <- length(x)
sort(x,partial=n-1)
x <- c(1,2,654,-8,5)
n <- length(x)
sort(x,partial=n-1)[2]
x <- c(1,2,654,-8,5)
n <- length(x)
sort(x)[2]
x <- c(1,2,654,-8,5)
sort(x)[2]
###2###
x <- c("1,2,654,-8,",5)
sort(x)[2]
class(x)
x <- c(1,2,654,-8,5)
class(x)
ifelse(class(x) == "numeric", 1, 0)
(function (vect) ifelse(class(vect) == "numeric", sort(vect)[2], "it isn't numeric vector"))
lapply(l,function (vect) ifelse(class(vect) == "numeric", sort(vect)[2], "it isn't numeric vector"))
lapply(l,function (vect) ifelse(class(vect) == "numeric", sort(vect)[2], "it isn't numeric vector"))
l <- list(c(1,2,3,7,-2), c(1,2,3,7,-2))
lapply(l,function (vect) ifelse(class(vect) == "numeric", sort(vect)[2], "it isn't numeric vector"))
l <- list(c(1,2,3,7,-2), c(1,2,3,-6,7,-2))
lapply(l,function (vect) ifelse(class(vect) == "numeric", sort(vect)[2], "it isn't numeric vector"))
l <- list(c(1,2,3,7,-2), c(1,2,3,-6,7,-2), c("d", "12"))
lapply(l,function (vect) ifelse(class(vect) == "numeric", sort(vect)[2], "it isn't numeric vector"))
lapply(dat,function (vect) ifelse(class(vect) == "numeric", sort(vect)[2], "it isn't numeric vector"))
lapply(dat,function (vect) ifelse(class(vect) == "numeric", sort(vect)[2], "it isn't numeric vector"))
View(dat)
names(dat)
dat[,"Ozone"]
class(dat[,"Ozone"])
# l <- list(c(1,2,3,7,-2), c(1,2,3,-6,7,-2), c("d", "12"))
lapply(dat,function (vect) ifelse(class(vect) == "numeric" | class(vect) == "integer" , sort(vect)[2], "it isn't numeric vector"))
NumberOfTrials <- 200
VectorOfMax <- c()
VectorOfMin <- c()
for (i in NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
append(VectorOfMax,values = max(SeqFromUnif))
append(VectorOfMin,values = min(SeqFromUnif))
}
print(VectorOfMax)
print(VectorOfMin)
NumberOfTrials <- 200
VectorOfMax <- c()
VectorOfMin <- c()
for (i in NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
VectorOfMax <- append(VectorOfMax,values = max(SeqFromUnif))
VectorOfMin <- append(VectorOfMin,values = min(SeqFromUnif))
}
print(VectorOfMax)
print(VectorOfMin)
NumberOfTrials <- 200
ListOfMax <- list()
ListOfMin <- list()
for (i in NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
# l[[i]] <- new_element
ListOfMax <- max(SeqFromUnif)
# VectorOfMin <- append(VectorOfMin,values = min(SeqFromUnif))
}
print(ListOfMax)
# print(VectorOfMin)
NumberOfTrials <- 200
ListOfMax <- list()
ListOfMin <- list()
for (i in NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
# l[[i]] <- new_element
ListOfMax[[i]] <- max(SeqFromUnif)
# VectorOfMin <- append(VectorOfMin,values = min(SeqFromUnif))
}
print(ListOfMax)
# print(VectorOfMin)
NumberOfTrials <- 200
ListOfMax <- list()
ListOfMin <- list()
for (i in NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
# l[[i]] <- new_element
print(max(SeqFromUnif))
# ListOfMax[[i]] <- max(SeqFromUnif)
# VectorOfMin <- append(VectorOfMin,values = min(SeqFromUnif))
}
NumberOfTrials <- 200
ListOfMax <- list()
ListOfMin <- list()
for (i in NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
# l[[i]] <- new_element
print(max(SeqFromUnif))
# ListOfMax[[i]] <- max(SeqFromUnif)
# VectorOfMin <- append(VectorOfMin,values = min(SeqFromUnif))
}
runif(n = 100, min = -1, max = 1)
NumberOfTrials <- 5
# ListOfMax <- list()
# ListOfMin <- list()
for (i in NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
# l[[i]] <- new_element
print(max(SeqFromUnif))
# ListOfMax[[i]] <- max(SeqFromUnif)
# VectorOfMin <- append(VectorOfMin,values = min(SeqFromUnif))
}
NumberOfTrials <- 5
# ListOfMax <- list()
# ListOfMin <- list()
for (i in NumberOfTrials){
# SeqFromUnif <- runif(n = 100, min = -1, max = 1)
# l[[i]] <- new_element
print(max(runif(n = 100, min = -1, max = 1)))
# ListOfMax[[i]] <- max(SeqFromUnif)
# VectorOfMin <- append(VectorOfMin,values = min(SeqFromUnif))
}
NumberOfTrials <- 5
# ListOfMax <- list()
# ListOfMin <- list()
for (i in 1:NumberOfTrials){
# SeqFromUnif <- runif(n = 100, min = -1, max = 1)
# l[[i]] <- new_element
print(max(runif(n = 100, min = -1, max = 1)))
# ListOfMax[[i]] <- max(SeqFromUnif)
# VectorOfMin <- append(VectorOfMin,values = min(SeqFromUnif))
}
NumberOfTrials <- 5
ListOfMax <- list()
# ListOfMin <- list()
for (i in 1:NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
ListOfMax[[i]] <- max(SeqFromUnif)
# VectorOfMin <- append(VectorOfMin,values = min(SeqFromUnif))
}
print(ListOfMax)
NumberOfTrials <- 5
ListOfMax <- list()
ListOfMin <- list()
for (i in 1:NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
ListOfMax[[i]] <- max(SeqFromUnif)
ListOfMax[[i]] <- min(SeqFromUnif)
}
print(ListOfMax)
print(ListOfMin)
NumberOfTrials <- 5
ListOfMax <- list()
ListOfMin <- list()
for (i in 1:NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
ListOfMax[[i]] <- max(SeqFromUnif)
ListOfMin[[i]] <- min(SeqFromUnif)
}
print(ListOfMax)
print(ListOfMin)
NumberOfTrials <- 5
ListOfMax <- list()
ListOfMin <- list()
for (i in 1:NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
ListOfMax[[i]] <- max(SeqFromUnif)
ListOfMin[[i]] <- min(SeqFromUnif)
}
# print(ListOfMax)
# print(ListOfMin)
set.seed(1)
hist(ListOfMax, freq = FALSE)
dens <- density(ListOfMax)
lines(dens)
NumberOfTrials <- 5
ListOfMax <- list()
ListOfMin <- list()
for (i in 1:NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
ListOfMax[[i]] <- max(SeqFromUnif)
ListOfMin[[i]] <- min(SeqFromUnif)
}
# print(ListOfMax)
# print(ListOfMin)
set.seed(1)
hist(ListOfMax, freq = FALSE)
dens <- density(ListOfMax)
lines(dens)
NumberOfTrials <- 5
ListOfMax <- list()
ListOfMin <- list()
for (i in 1:NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
ListOfMax[[i]] <- max(SeqFromUnif)
ListOfMin[[i]] <- min(SeqFromUnif)
}
# print(ListOfMax)
# print(ListOfMin)
set.seed(1)
hist(ListOfMax, freq = FALSE)
dens <- density(ListOfMax)
lines(dens)
set.seed(1)
hist(dat[,"p"], freq = FALSE)
dens <- density(dat[,"p"])
lines(dens)
rm(list = ls())
setwd("D:/MyProjects/StatisticHomeworks/Homework7")
dat <- read.csv("Hw07p04.csv", stringsAsFactors = FALSE,header = FALSE)
# head(dat)
dat["p"] <- rowSums( dat[,2:11] )/10
set.seed(1)
hist(dat[,"p"], freq = FALSE)
dens <- density(dat[,"p"])
lines(dens)
class(dat[,"p"])
class(ListOfMax)
class(ListOfMax)
NumberOfTrials <- 5
ListOfMax <- list()
ListOfMin <- list()
for (i in 1:NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
ListOfMax[[i]] <- max(SeqFromUnif)
ListOfMin[[i]] <- min(SeqFromUnif)
}
class(ListOfMax)
ListOfMax <- as.numeric(ListOfMax)
class(ListOfMax)
ListOfMax
NumberOfTrials <- 5
ListOfMax <- list()
ListOfMin <- list()
for (i in 1:NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
ListOfMax[[i]] <- max(SeqFromUnif)
ListOfMin[[i]] <- min(SeqFromUnif)
}
ListOfMax <- as.numeric(ListOfMax)
ListOfMin <- as.numeric(ListOfMin)
set.seed(1)
hist(ListOfMax, freq = FALSE)
dens <- density(ListOfMax)
lines(dens)
y <- dunif(min = -1, max = 1)
?dunif
NumberOfTrials <- 5
ListOfMax <- list()
ListOfMin <- list()
for (i in 1:NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
ListOfMax[[i]] <- max(SeqFromUnif)
ListOfMin[[i]] <- min(SeqFromUnif)
x <- dunif(SeqFromUnif)
}
ListOfMax <- as.numeric(ListOfMax)
ListOfMin <- as.numeric(ListOfMin)
plot(x)
set.seed(1)
y <- dunif(min = -1, max = 1)
hist(ListOfMax, freq = FALSE)
dens <- density(ListOfMax)
lines(dens)
plot(x)
NumberOfTrials <- 5
ListOfMax <- list()
ListOfMin <- list()
for (i in 1:NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
ListOfMax[[i]] <- max(SeqFromUnif)
ListOfMin[[i]] <- min(SeqFromUnif)
x <- dunif(SeqFromUnif)
}
ListOfMax <- as.numeric(ListOfMax)
ListOfMin <- as.numeric(ListOfMin)
# print(ListOfMax)
# print(ListOfMin)
set.seed(1)
y <- dunif(min = -1, max = 1)
hist(ListOfMax, freq = FALSE)
dens <- density(ListOfMax)
lines(dens)
plot(x)
NumberOfTrials <- 5
ListOfMax <- list()
ListOfMin <- list()
for (i in 1:NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
ListOfMax[[i]] <- max(SeqFromUnif)
ListOfMin[[i]] <- min(SeqFromUnif)
x <- dunif(SeqFromUnif)
}
ListOfMax <- as.numeric(ListOfMax)
ListOfMin <- as.numeric(ListOfMin)
# print(ListOfMax)
# print(ListOfMin)
set.seed(1)
hist(ListOfMax, freq = FALSE)
dens <- density(ListOfMax)
lines(dens)
plot(x)
NumberOfTrials <- 5
ListOfMax <- list()
ListOfMin <- list()
for (i in 1:NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
ListOfMax[[i]] <- max(SeqFromUnif)
ListOfMin[[i]] <- min(SeqFromUnif)
TheoriticalPDF <- dunif(SeqFromUnif)
}
ListOfMax <- as.numeric(ListOfMax)
ListOfMin <- as.numeric(ListOfMin)
# print(ListOfMax)
# print(ListOfMin)
set.seed(1)
hist(ListOfMax, freq = FALSE)
dens <- density(ListOfMax)
lines(dens)
plot(TheoriticalPDF)
NumberOfTrials <- 5
ListOfMax <- list()
ListOfMin <- list()
for (i in 1:NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
ListOfMax[[i]] <- max(SeqFromUnif)
ListOfMin[[i]] <- min(SeqFromUnif)
TheoriticalPDF <- dunif(SeqFromUnif)
}
ListOfMax <- as.numeric(ListOfMax)
ListOfMin <- as.numeric(ListOfMin)
# par(mfrow = c(1, 2))
set.seed(1)
hist(ListOfMax, freq = FALSE)
dens <- density(ListOfMax)
lines(dens)
# plot(TheoriticalPDF)
NumberOfTrials <- 5
ListOfMax <- list()
ListOfMin <- list()
for (i in 1:NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
ListOfMax[[i]] <- max(SeqFromUnif)
ListOfMin[[i]] <- min(SeqFromUnif)
TheoriticalPDF <- dunif(SeqFromUnif)
}
ListOfMax <- as.numeric(ListOfMax)
ListOfMin <- as.numeric(ListOfMin)
# par(mfrow = c(1, 2))
set.seed(1)
hist(ListOfMax, freq = FALSE)
dens <- density(ListOfMax)
lines(dens)
# plot(TheoriticalPDF)
plot(TheoriticalPDF)
NumberOfTrials <- 5
ListOfMax <- list()
ListOfMin <- list()
for (i in 1:NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
ListOfMax[[i]] <- max(SeqFromUnif)
ListOfMin[[i]] <- min(SeqFromUnif)
TheoriticalPDF <- dunif(SeqFromUnif)
}
ListOfMax <- as.numeric(ListOfMax)
ListOfMin <- as.numeric(ListOfMin)
# par(mfrow = c(1, 2))
set.seed(1)
hist(ListOfMax, freq = FALSE)
dens <- density(ListOfMax)
lines(dens)
NumberOfTrials <- 200
ListOfMax <- list()
ListOfMin <- list()
for (i in 1:NumberOfTrials){
SeqFromUnif <- runif(n = 100, min = -1, max = 1)
ListOfMax[[i]] <- max(SeqFromUnif)
ListOfMin[[i]] <- min(SeqFromUnif)
TheoriticalPDF <- dunif(SeqFromUnif)
}
ListOfMax <- as.numeric(ListOfMax)
ListOfMin <- as.numeric(ListOfMin)
# par(mfrow = c(1, 2))
set.seed(1)
hist(ListOfMax, freq = FALSE)
dens <- density(ListOfMax)
lines(dens)
# plot(TheoriticalPDF)
